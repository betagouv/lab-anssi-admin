#!/usr/bin/env bash
set -euo pipefail

tmp_dir="$(mktemp -d)"
GPG_HOME_DIR="${GPG_HOME_DIR:-$(mktemp -d)}"

import_pgp_keys() {
  gpg --homedir "${GPG_HOME_DIR}" --import <(echo "$PGP_KEYS") 2>/dev/null
}

list_keys() {
  gpg --homedir "${GPG_HOME_DIR}" --list-keys --with-colons | awk -F: '/^pub:/ {print $5}'
}

gpg_encrypt() {
  local recipients=""
  for key in $(list_keys)
  do
    recipients="$recipients --recipient $key"
  done

  gpg --homedir "${GPG_HOME_DIR}" --trust-model always --encrypt $recipients
}

check_dump_is_healthy() {
  local dump="$1"
  pg_restore --list "$dump" >/dev/null
}

backup_and_push() {
  local db_name="$1"
  local addon_id="$2"

  download "$addon_id" > "$tmp_dir/$db_name"
  check_dump_is_healthy "$tmp_dir/$db_name"
  cat "$tmp_dir/$db_name" | gpg_encrypt | s3_push "${S3_URL}${db_name}.pgp"
}

declare -F download > /dev/null || download() {
  local addon="$1"
  local backup="$(clever database backups "$addon" | tail -n1 | cut -d' ' -f1)"
  echo clever database backups download "$addon" "$backup" >&2
  clever database backups download "$addon" "$backup"
}


import_pgp_keys

for var in $(set | grep '^ADDON_ID_'); do
  addon_name="$(echo $var | sed -e 's:^ADDON_ID_\(.*\)=.*:\1:')"
  addon_value="$(echo "$var" | cut -d'=' -f2)"
  backup_and_push "$addon_name" "$addon_value"
done

rm -rf "$tmp_dir"
